version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_caddy: {}
  static: {}
  rabbitmq: {}

services:
  django:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
    restart: always
    container_name: django
    image: hr_crm_django
    volumes:
      - static:/app/static
    depends_on:
      - postgres
    env_file:
      - .envs/.django
      - .envs/.postgres
    command: /start

  listener:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
    restart: always
    container_name: listener
    image: hr_crm_django
    depends_on:
      - postgres
      - django
    env_file:
      - .envs/.django
      - .envs/.postgres
    command: /listen

  postgres:
    build:
      context: .
      dockerfile: ./compose/postgres/Dockerfile
    restart: always
    container_name: postgres
    image: hr_crm_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - .envs/.postgres

  caddy:
    build:
      context: .
      dockerfile: ./compose/caddy/Dockerfile
    restart: always
    container_name: caddy
    image: hr_crm_caddy
    depends_on:
      - django
    volumes:
      - production_caddy:/root/.caddy
      - static:/app/static
    env_file:
      - .envs/.caddy
    ports:
      - "80:80"
      - "443:443"

  rabbitmq:
    build: compose/rabbitmq
    container_name: rabbitmq
    image: hr_crm_rabbitmq
    ports:
      - "15673:15672"
      - "5672:5672"
    volumes:
      - rabbitmq:/var/lib/rabbitmq